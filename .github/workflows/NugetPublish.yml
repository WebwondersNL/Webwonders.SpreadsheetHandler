name: CI/CD Pipeline

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore ./src/Webwonders.SpreadsheetHandler/Webwonders.SpreadsheetHandler.csproj

      - name: Build the project
        run: dotnet build ./src/Webwonders.SpreadsheetHandler/Webwonders.SpreadsheetHandler.csproj --configuration Release --no-restore

  publish:
    name: Publish to NuGet
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Ensure NuGet source exists
        run: |
          dotnet nuget list source | grep -q "https://api.nuget.org/v3/index.json" || \
          dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=$(echo ${{ github.ref_name }} | sed 's/v//')" >> $GITHUB_ENV

      - name: Copy README.md for Packaging
        run: cp README.md ./src/Webwonders.SpreadsheetHandler/

      - name: Publish package to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          VERSION: ${{ env.VERSION }}
        run: |
          dotnet pack ./src/Webwonders.SpreadsheetHandler/Webwonders.SpreadsheetHandler.csproj --configuration Release /p:Version=$VERSION --output ./artifacts
          dotnet nuget push ./artifacts/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  release:
    name: Create Release Notes
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Release Notes
        id: generate_release_notes
        uses: actions/github-script@v6
        with:
          script: |
            const tagName = context.ref.replace('refs/tags/', '');
            const response = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              target_commitish: context.sha,
            });
            core.setOutput('release_notes', response.data.body);

      - name: Publish Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ steps.generate_release_notes.outputs.release_notes }}
